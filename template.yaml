AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  emart-account-app

  Sample SAM Template for emart-account-app

Parameters:
  MasterSecretArn:
    Description: Master Secret ARN
    Type: String
  MasterSecretsManagerKey:
    Description: KMS Key for the use of secrets across accounts
    Type: String
  Stage:
    Description: Environment
    Type: String
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  AccountFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: account/src
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /helloworld
            Method: get
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/SampleLambdaRole-${AWS::Region}-${AWS::AccountId}-${Stage}

  SampleApiFunctionPermission:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub SampleApiFunctionPermission-${AWS::Region}-${AWS::AccountId}-${SampleApiFunction}
      Roles:
        - !Sub SampleLambdaRole-${AWS::Region}-${AWS::AccountId}-${Stage}
      PolicyDocument:
        Version: '2012-10-17' # Policy Document
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${SampleApiFunction}:*
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource: !Ref MasterSecretArn
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !Ref MasterSecretsManagerKey

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
